% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rblimp.R, R/rblimp_fcs.R, R/rblimp_syntax.R
\name{rblimp}
\alias{rblimp}
\alias{rblimp_fcs}
\alias{rblimp_syntax}
\title{Wrapper functions to provide Blimp functions in R}
\usage{
rblimp(
  model,
  data,
  burn = 10000,
  iter = 10000,
  seed,
  thin,
  nimps,
  latent,
  randomeffect,
  parameters,
  clusterid,
  weight,
  ordinal,
  nominal,
  count,
  center,
  chains,
  simple,
  waldtest,
  options,
  transform,
  fixed,
  output,
  tmpfolder,
  add_save = TRUE,
  print_output = TRUE,
  nopowershell = FALSE
)

rblimp_fcs(
  variables,
  data,
  burn,
  iter,
  seed,
  thin,
  nimps,
  clusterid,
  ordinal,
  nominal,
  chains,
  options,
  transform,
  fixed,
  output,
  tmpfolder,
  save_add = TRUE,
  print_output = TRUE,
  nopowershell = FALSE
)

rblimp_syntax(
  model,
  data,
  burn,
  iter,
  seed,
  thin,
  nimps,
  latent,
  randomeffect,
  parameters,
  clusterid,
  weight,
  ordinal,
  nominal,
  count,
  transform,
  fixed,
  center,
  chains,
  simple,
  waldtest,
  options,
  save,
  output
)
}
\arguments{
\item{model}{a character string or vector/list of character strings. Specifies Blimp's MODEL command. See details.}

\item{data}{a \code{\link{data.frame}}. The data set used by Blimp}

\item{burn}{an integer. The number of burn-in iterations to be run}

\item{iter}{an integer. The number of post burn-in iterations to be run}

\item{seed}{a positive integer. The seeding value for Blimp's pseudo random number generator}

\item{thin}{an integer. The thinning interval for imputations only.}

\item{nimps}{an integer. The number of imputations to save.}

\item{latent}{a character string, formula, or vector/list of character strings. Specifies Blimp's LATENT command. See details.}

\item{randomeffect}{a character string or vector/list of character strings. Specifies Blimp's RANDOMEFFECTS command.}

\item{parameters}{a character string or vector/list of character strings. Specifies Blimp's MODEL command. See details.}

\item{clusterid}{a character string, formula, or vector/list of character strings. Specifies Blimp's CLUSTERID command. See details.}

\item{weight}{a character string, formula, or vector/list of character strings. Specifies Blimp's WEIGHT command. See details.}

\item{ordinal}{a character string, formula, or vector/list of character strings. Specifies Blimp's ORDINAL command. See details.}

\item{nominal}{a character string, formula, or vector/list of character strings. Specifies Blimp's NOMINAL command. See details.}

\item{count}{a character string, formula, or vector/list of character strings. Specifies Blimp's COUNT command. See details.}

\item{center}{a character string, formula, or vector/list of character strings. Specifies Blimp's CENTER command. See details.}

\item{chains}{an integer, character string, or vector/list of character strings. Specifies Blimp's CHAINS command}

\item{simple}{a character string or vector/list of character strings. Specifies Blimp's SIMPLE command. See details.}

\item{waldtest}{a character string or vector/list of character strings. Specifies Blimp's WALDTEST command. See details.}

\item{options}{a character string or vector/list of character strings. Specifies Blimp's OPTIONS command}

\item{transform}{a character string or vector/list of character strings. Specifies Blimp's TRANSFORM command}

\item{fixed}{a character string, formula, or vector/list of character strings. Specifies Blimp's FIXED command. See details.}

\item{output}{a character string or vector/list of character strings. Specifies Blimp's OUTPUT command}

\item{tmpfolder}{a character string. If specified \code{rblimp} will use the given
file path as a temporary directory instead of creating one with \code{\link{tempdir}}}

\item{add_save}{a logical value or a list of logical values.
If \code{TRUE} then saveLatent, saveResidual, and savePredicted will be included in OPTIONS command.
Otherwise, a list with elements \code{latent}, \code{residual}, and \code{predicted}
each containing a logical value can be used to toggle on or off them invidually.
file path as a temporary directory instead of creating one with \code{\link{tempdir}}}

\item{print_output}{The type of output printed to the console.
\code{'iteration'} or logical \code{TRUE} is only iteration history, \code{'none'} or logical \code{FALSE}
suppresses all output to console, and \code{'all'} prints all output to console.}

\item{nopowershell}{Windows only. Uses cmd.exe with some limited functions (instead of powershell).}
}
\value{
\code{\link{blimp_obj}}
}
\description{
\code{rblimp} will generate the input, run the script, and load most the saved data into an R object. \code{rblimp_fcs}
is used to specify the FCS command in Blimp. \code{rblimp_syntax} will generate the Blimp syntax file only.
}
\details{
The above functions require knowledge of specifying Blimp commands. Blimp's syntax commands are
documented in the \href{https://docs.google.com/document/d/1D3MS79CakuX9mVVvGH13B5nRd9XLttp69oGsvrIRK64/edit?usp=sharing}{Blimp User Manual}

By default, these commands can be inputted as character strings that will be used to generate the syntax.
For multiple lined commands, you can wrap multiple strings into a character \code{\link{vector}} or a \code{\link{list}}.
The appropriate semicolons will be specified, so they are not required in any character strings.
If specifying a character \code{\link{vector}} or a \code{\link{list}} for the \code{model}, providing names to each element
will be used as blocks in Blimp's model syntax. Similarly, specifying named elements can be used
for the \code{center} command to specify if you would like centering within a cluster or
grand mean centering. This also works for the \code{latent} input when requesting latent
variables at a specific cluster identifier.
See the \href{https://docs.google.com/document/d/1D3MS79CakuX9mVVvGH13B5nRd9XLttp69oGsvrIRK64/edit?usp=sharing}{Blimp User Manual}
for more details about types of centering and specifying latent variables.

In addition, R's formula syntax can be used to specify lists of variables
in place of character strings. For example, specifying the CLUSTERID command with
the variable \code{id} can be specified as \code{ ~ id} as opposed to a character string.
Similarly, \code{+} can be used to specify multiple variables. For example, to specify
two variables as ordinal the formula would be: \code{~ x1 + x2}. Finally, this can also be
used to specify centering and latent variables. For example, to center \code{x1} and \code{x2}
within cluster we can specify: \code{cwc ~ x1 + x2}.

Running \code{rblimp} will also check if blimp is up to date.
See details in \code{\link{rblimp_source}} for more information.
}
\examples{
\dontshow{if (has_blimp()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Generate Data
mydata <- data.frame(x = rnorm(1000), y = rnorm(1000))

# Nonsensical model
mdl <- rblimp(
    c(
        'y <- x*2',
        'f1 <- 1'
    ),
    mydata,
    seed = 3927,
    nimps = 2,
    latent = ~ f1,
    center = cgm ~ x,
    fixed = ~ x
)

# View results
summary(mdl)
\dontshow{\}) # examplesIf}
}
